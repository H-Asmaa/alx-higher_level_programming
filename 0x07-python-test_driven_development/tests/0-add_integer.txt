	"""

		A set of tests to check the function add_integer

	"""

--------------------------------------------------------------------------------------------------
				Testing INT / FLOAT						 |
--------------------------------------------------------------------------------------------------

>>> add_integer = __import__('0-add_integer').add_integer

		>>> add_integer(1, 2)
		3

		>>> add_integer(1, "2")
		Traceback (most recent call last):
		...
		TypeError: b must be an integer

		>>> add_integer(2)
		100

		>>> add_integer(100.3, -2)
		98

		>>> add_integer(681779, 297266)
		979045

		>>> add_integer(3.445665564436333356644463545646466, 3)
		6

----------------------------------------------------------------------------------------------
				Testing STRINGS						     |
----------------------------------------------------------------------------------------------

		>>> add_integer(1, "2")
		Traceback (most recent call last):
		...
		TypeError: b must be an integer

		>>> add_integer(4, "School")
		Traceback (most recent call last):
		...
		TypeError: b must be an integer

		>>> add_integer("Hello", 7)
		Traceback (most recent call last):
		...
		TypeError: a must be an integer

----------------------------------------------------------------------------------------------
				Testing EXTRA 						     |
----------------------------------------------------------------------------------------------

		>>> add_integer(None)
		Traceback (most recent call last):
		...
		TypeError: a must be an integer

		>>> add_integer(2, float('inf'))
		Traceback (most recent call last):
		...
		OverflowError: cannot convert float infinity to integer

		>>> add_integer(2, float('nan'))
		Traceback (most recent call last):
		...
		ValueError: cannot convert float NaN to integer

----------------------------------------------------------------------------------------------
				Testing TYPE 						     |
----------------------------------------------------------------------------------------------

		>>> type(add_integer(4, 2.3))
		<class 'int'>

----------------------------------------------------------------------------------------------

	"""

		end of tests

	"""
